name: CI/CD Workflow

on:
  push:
    branches:
      - development

jobs:
  build:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup github
        run: |
          git config --global user.email "$EMAIL_GITHUB"
          git config --global user.name "jacob-macleod"
          git fetch origin
          git config pull.rebase false
          git pull origin development --allow-unrelated-histories
      - name: Set up Firebase credentials
        run: |
          echo "$FIREBASE_KEY" > credentials.json
          echo "$FIREBASE_URL" > firebase_url
          echo "$FIREBASE_CONFIG" > firebase_config.json
          echo "$MAILCHIMP_API_KEY" > frontend/src/api/secretKeys.js
          echo "$JWT_PRIVATE_KEY" > jwt_key.json
        env:
          FIREBASE_KEY: ${{ secrets.FIREBASE_KEY }}
          FIREBASE_URL: ${{ secrets.FIREBASE_URL }}
          FIREBASE_CONFIG: ${{ secrets.FIREBASE_CONFIG }}
          MAILCHIMP_API_KEY: ${{ secrets.MAILCHIMP_API_KEY }}
          JWT_PRIVATE_KEY: ${{ secrets.JWT_PRIVATE_KEY }}
      - name: Install node
        run: |
          sudo apt-get update
          sudo apt install nodejs npm
          cd frontend
          npm install -g create-react-app
          npm install
      - name: Build the React App for Deployment
        run: |
          cd frontend
          npm run build
          rm -rf frontend/node_modules
      - name: Build the Docker image
        run: docker build -t jacobmacleod/flashcard-app:development_$(grep -Eo "__version__ = \"[0-9]+\.[0-9]+\.[0-9]+\"" "backend/__init__.py" | awk -F '"' '{print $2}') .
      - name: Log in to Docker Hub and push image
        run: |
          docker login -u jacobmacleod -p $DOCKER_PASSWORD
          docker push jacobmacleod/flashcard-app:development_$(grep -Eo "__version__ = \"[0-9]+\.[0-9]+\.[0-9]+\"" "backend/__init__.py" | awk -F '"' '{print $2}')
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  test-docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Test Docker Image
        run: |
          docker login -u jacobmacleod -p $DOCKER_PASSWORD
          docker run -d -p 5000:5000 jacobmacleod/flashcard-app:latest
          sleep 10
          curl GET http://localhost:5000          
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
